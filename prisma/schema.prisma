generator client {
  provider = "prisma-client-js"
  previewFeatures = ["filteredRelationCount"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model factors {
  id                  Int                   @id @default(autoincrement())
  code                String?               @db.VarChar(20)
  name                String?               @db.VarChar(100)
  description         String?               @db.VarChar(255)
  knowledgeManagement knowledgeManagement[]
  questionnaires      questionnaires[]
}

model indicators {
  id                                                               Int                   @id @default(autoincrement())
  subVariableId                                                    Int
  code                                                             String?               @db.VarChar(20)
  name                                                             String?               @db.Text
  references                                                       String?               @db.VarChar(100)
  description                                                      String?               @db.Text
  type                                                             Int?                  @db.SmallInt
  subVariables                                                     subVariables          @relation(fields: [subVariableId], references: [id], onDelete: Cascade, map: "indicators_ibfk_1")
  knowledgeManagement                                              knowledgeManagement[]
  questionnaireFinals_questionnaireFinals_indicatorId1Toindicators questionnaireFinals[] @relation("questionnaireFinals_indicatorId1Toindicators")
  questionnaireFinals_questionnaireFinals_indicatorId2Toindicators questionnaireFinals[] @relation("questionnaireFinals_indicatorId2Toindicators")
  questionnaires_questionnaires_indicatorId1Toindicators           questionnaires[]      @relation("questionnaires_indicatorId1Toindicators")
  questionnaires_questionnaires_indicatorId2Toindicators           questionnaires[]      @relation("questionnaires_indicatorId2Toindicators")

  @@index([subVariableId], map: "subVariableId")
}

model knowledgeManagement {
  id                            Int                             @id @default(autoincrement())
  subVariableId                 Int?
  factorId                      Int?
  indicatorId                   Int?
  reference                     String?                         @db.VarChar(255)
  number                        Int?
  knowladgeManagementCompetence knowladgeManagementCompetence[]
  knowladgeManagementIKU        knowladgeManagementIKU[]
  factors                       factors?                        @relation(fields: [factorId], references: [id], onDelete: Cascade, map: "knowledgemanagement_ibfk_1")
  indicators                    indicators?                     @relation(fields: [indicatorId], references: [id], onDelete: Cascade, map: "knowledgemanagement_ibfk_2")
  subVariables                  subVariables?                   @relation(fields: [subVariableId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "knowledgemanagement_ibfk_3")

  @@index([factorId], map: "factorId")
  @@index([indicatorId], map: "indicatorId")
  @@index([subVariableId], map: "subVariableId")
}

model questionnaireFinals {
  id                                                      Int          @id @default(autoincrement())
  respondentId                                            Int?
  indicatorId1                                            Int?
  indicatorId2                                            Int?
  value                                                   Decimal?     @db.Decimal(6, 2)
  respondents                                             respondents? @relation(fields: [respondentId], references: [id], onDelete: Cascade, map: "questionnairefinals_ibfk_1")
  indicators_questionnaireFinals_indicatorId1Toindicators indicators?  @relation("questionnaireFinals_indicatorId1Toindicators", fields: [indicatorId1], references: [id], onDelete: Cascade, map: "questionnairefinals_ibfk_2")
  indicators_questionnaireFinals_indicatorId2Toindicators indicators?  @relation("questionnaireFinals_indicatorId2Toindicators", fields: [indicatorId2], references: [id], onDelete: Cascade, map: "questionnairefinals_ibfk_3")

  @@index([indicatorId1], map: "indicatorId1")
  @@index([indicatorId2], map: "indicatorId2")
  @@index([respondentId], map: "respondentId")
}

model questionnaires {
  id                                                 Int           @id @default(autoincrement())
  respondentId                                       Int?
  indicatorId1                                       Int?
  indicatorId2                                       Int?
  value                                              Decimal?      @db.Decimal(6, 2)
  indexIndicator1                                    Int?
  indexIndicator2                                    Int?
  subVariableId                                      Int?
  factorId                                           Int?
  respondents                                        respondents?  @relation(fields: [respondentId], references: [id], onDelete: Cascade, map: "questionnaires_ibfk_1")
  indicators_questionnaires_indicatorId1Toindicators indicators?   @relation("questionnaires_indicatorId1Toindicators", fields: [indicatorId1], references: [id], onDelete: Cascade, map: "questionnaires_ibfk_2")
  indicators_questionnaires_indicatorId2Toindicators indicators?   @relation("questionnaires_indicatorId2Toindicators", fields: [indicatorId2], references: [id], onDelete: Cascade, map: "questionnaires_ibfk_3")
  subVariables                                       subVariables? @relation(fields: [subVariableId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "questionnaires_ibfk_4")
  factors                                            factors?      @relation(fields: [factorId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "questionnaires_ibfk_5")

  @@index([indicatorId1], map: "indicatorId1")
  @@index([indicatorId2], map: "indicatorId2")
  @@index([respondentId], map: "respondentId")
  @@index([factorId], map: "factorId")
  @@index([subVariableId], map: "subVariableId")
}

model respondents {
  id                  Int                   @id @default(autoincrement())
  name                String?               @db.VarChar(150)
  nik                 String?               @db.VarChar(50)
  gender              String?               @db.VarChar(20)
  position            String?               @db.VarChar(50)
  specialty           String?               @db.VarChar(150)
  faculty             String?               @db.VarChar(150)
  university          String?               @db.VarChar(150)
  type                respondents_type?     @default(umum)
  questionnaireFinals questionnaireFinals[]
  questionnaires      questionnaires[]
}

model subVariables {
  id                            Int                             @id @default(autoincrement())
  variableId                    Int?
  code                          String?                         @db.VarChar(20)
  name                          String?                         @db.VarChar(100)
  description                   String?                         @db.VarChar(255)
  km                            subVariables_km?                @default(no)
  indicators                    indicators[]
  knowladgeManagementCompetence knowladgeManagementCompetence[]
  knowladgeManagementIKU        knowladgeManagementIKU[]
  knowledgeManagement           knowledgeManagement[]
  questionnaires                questionnaires[]
  variables                     variables?                      @relation(fields: [variableId], references: [id], onDelete: Cascade, map: "subvariables_ibfk_1")

  @@index([variableId], map: "variableId")
}

model users {
  id       Int         @id @default(autoincrement())
  name     String?     @db.VarChar(100)
  username String?     @db.VarChar(100)
  password String?     @db.VarChar(255)
  role     users_role? @default(admin)
}

model variables {
  id           Int            @id @default(autoincrement())
  code         String?        @db.VarChar(20)
  name         String?        @db.VarChar(100)
  description  String?        @db.VarChar(255)
  subVariables subVariables[]
}

model knowladgeManagementCompetence {
  id                    Int                  @id @default(autoincrement()) @db.UnsignedInt
  knowledgeManagementId Int?
  subVariableId         Int?
  type                  Int?
  knowledgeManagement   knowledgeManagement? @relation(fields: [knowledgeManagementId], references: [id], onDelete: Cascade, map: "knowladgemanagementcompetence_ibfk_1")
  subVariables          subVariables?        @relation(fields: [subVariableId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "knowladgemanagementcompetence_ibfk_2")

  @@index([knowledgeManagementId], map: "knowledgeManagementId")
  @@index([subVariableId], map: "subVariableId")
}

model knowladgeManagementIKU {
  id                    Int                  @id @default(autoincrement()) @db.UnsignedInt
  knowledgeManagementId Int?
  subVariableId         Int?
  type                  Int?
  knowledgeManagement   knowledgeManagement? @relation(fields: [knowledgeManagementId], references: [id], onDelete: Cascade, map: "knowladgemanagementiku_ibfk_1")
  subVariables          subVariables?        @relation(fields: [subVariableId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "knowladgemanagementiku_ibfk_2")

  @@index([knowledgeManagementId], map: "knowledgeManagementId")
  @@index([subVariableId], map: "subVariableId")
}

enum users_role {
  expert
  admin
}

enum subVariables_km {
  yes
  no
}

enum respondents_type {
  ahli
  umum
}
